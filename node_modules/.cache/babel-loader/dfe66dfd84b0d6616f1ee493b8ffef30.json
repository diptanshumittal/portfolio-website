{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KOBE\\\\Desktop\\\\home-master\\\\src\\\\components\\\\home\\\\Project.jsx\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport ProjectCard from \"./ProjectCard\";\nimport axios from \"axios\";\n\nconst Project = () => {\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    id: \"projects\",\n    className: \"bg-light m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"display-4 pb-5 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, heading), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, projectsArray.length ? projectsArray.map((project, index) => /*#__PURE__*/React.createElement(ProjectCard, {\n    key: `project-card-${index}`,\n    id: `project-card-${index}`,\n    value: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })) : dummyProjectsArr.map((project, index) => /*#__PURE__*/React.createElement(ProjectCard, {\n    key: `dummy-${index}`,\n    id: `dummy-${index}`,\n    value: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default Project;","map":{"version":3,"sources":["C:/Users/KOBE/Desktop/home-master/src/components/home/Project.jsx"],"names":["React","useState","useEffect","useCallback","Container","Jumbotron","Row","ProjectCard","axios","Project","heading","projectsArray","length","map","project","index","dummyProjectsArr"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,EAAE,EAAC,UAApB;AAA+B,IAAA,SAAS,EAAC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAI,IAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CC,OAA5C,CAHF,eAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,aAAa,CAACC,MAAd,GACGD,aAAa,CAACE,GAAd,CAAkB,CAACC,OAAD,EAAUC,KAAV,kBAChB,oBAAC,WAAD;AACE,IAAA,GAAG,EAAG,gBAAeA,KAAM,EAD7B;AAEE,IAAA,EAAE,EAAG,gBAAeA,KAAM,EAF5B;AAGE,IAAA,KAAK,EAAED,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GAQGE,gBAAgB,CAACH,GAAjB,CAAqB,CAACC,OAAD,EAAUC,KAAV,kBACnB,oBAAC,WAAD;AACE,IAAA,GAAG,EAAG,SAAQA,KAAM,EADtB;AAEE,IAAA,EAAE,EAAG,SAAQA,KAAM,EAFrB;AAGE,IAAA,KAAK,EAAED,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATN,CAJF,CADF,CADF;AA4BD,CA7BD;;AA+BA,eAAeL,OAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport ProjectCard from \"./ProjectCard\";\nimport axios from \"axios\";\n\nconst Project = () => {\n  return (\n    <Jumbotron fluid id=\"projects\" className=\"bg-light m-0\">\n      <Container >\n\n\n        <h2 className=\"display-4 pb-5 text-center\">{heading}</h2>\n        <Row>\n          {projectsArray.length\n            ? projectsArray.map((project, index) => (\n                <ProjectCard\n                  key={`project-card-${index}`}\n                  id={`project-card-${index}`}\n                  value={project}\n                />\n              ))\n            : dummyProjectsArr.map((project, index) => (\n                <ProjectCard\n                  key={`dummy-${index}`}\n                  id={`dummy-${index}`}\n                  value={project}\n                />\n              ))}\n        </Row>\n\n\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default Project;\n"]},"metadata":{},"sourceType":"module"}