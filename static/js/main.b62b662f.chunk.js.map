{"version":3,"sources":["editable-stuff/profilpic.png","editable-stuff/config.js","components/home/MainBody.jsx","components/home/AboutMe.jsx","components/home/Project.jsx","components/Footer.jsx","hooks/useIsomorphicLayoutEffect.js","hooks/useScrollPosition.js","hooks/useResizeObserver.js","components/Navbar.jsx","components/home/Skills.jsx","components/home/GetInTouch.jsx","components/home/ProjectCard.jsx","components/home/GitHubProject.jsx","components/home/Experience.jsx","components/home/Education.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","navBar","mainBody","gradientColors","firstName","middleName","lastName","message","icons","image","url","education","about","show","heading","imageLink","require","imageSize","resume","repos","gitHubUsername","reposLength","specificRepos","skills","hardSkills","name","value","softSkills","getInTouch","experiences","projects","MainBody","React","forwardRef","ref","gradient","title","Jumbotron","fluid","id","style","background","backgroundSize","className","Container","cursor","map","icon","index","key","target","rel","href","aria-label","split","role","pictureLinkRegex","RegExp","AboutMe","link","imgSize","useState","profilePicUrl","setProfilePicUrl","Boolean","showPic","setShowPic","useEffect","test","handleRequest","a","axios","get","response","data","graphql","user","profile_pic_url_hd","console","error","Row","src","alt","width","height","Project","class","Footer","props","backgroundColor","method","action","type","placeholder","required","useIsomorphicLayoutEffect","window","useLayoutEffect","isBrowser","getScrollPosition","element","useWindow","x","y","position","current","document","body","getBoundingClientRect","scrollX","scrollY","left","top","useScrollPosition","effect","deps","wait","useRef","throttleTimeout","callBack","currPos","prevPos","handleScroll","setTimeout","addEventListener","removeEventListener","clearTimeout","defaultProps","useResizeObserver","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","Navigation","isTop","setIsTop","scrollPosition","setScrollPosition","navbarMenuRef","navbarDimensions","navBottom","bottom","offsetTop","Navbar","expand","Brand","process","Toggle","aria-controls","Collapse","Nav","Link","Skills","skillsTabRef","isScrolled","setIsScrolled","GetInTouch","email","CardButtons","svn_url","Language","languages_url","repo_url","setData","useCallback","array","total_count","push","length","language","Math","trunc","CardFooter","star_count","pushed_at","updated_at","setUpdated_at","handleUpdatetime","date","Date","diff","getTime","hours","measurement","toString","time","Intl","DateTimeFormat","day","month","year","format","ProjectCard","description","stargazers_count","Col","md","Card","Body","Title","as","Text","count","dummyProject","API","GitHubProject","username","specfic","allReposAPI","specficReposAPI","dummyProjectsArr","Array","fill","projectsArray","setProjectsArray","fetchRepos","repoList","slice","repoName","project","Experience","data-date","Education","Home","App","titleRef","basename","path","exact","component","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b62b662f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilpic.b7de42a5.png\";","// Navigation Bar SECTION\nconst navBar = {\n  show: true,\n};\n\n// Main Body SECTION\nconst mainBody = {\n  gradientColors: \"#4484ce, #1ad7c0, #ff9b11, #9b59b6, #ff7f7f, #ecf0f1\",\n  firstName: \"Diptanshu\",\n  middleName: \"\",\n  lastName: \"Mittal\",\n  message: \"Undergrad Researcher @ IIIT-Delhi | Majors in Computer Science\",\n  icons: [\n    {\n      image: \"fa-github\",\n      url: \"https://github.com/diptanshumittal\",\n    },\n    {\n      image: \"fa-facebook\",\n      url: \"https://www.facebook.com/diptanshu.mittal.7\",\n    },\n    {\n      image: \"fa-instagram\",\n      url: \"https://www.instagram.com/mittaldiptanshu/\",\n    },\n    {\n      image: \"fa-linkedin\",\n      url: \"https://www.linkedin.com/in/diptanshu-mittal\",\n    },\n    {\n      image: \"fa-twitter\",\n      url: \"https://www.twitter.com/diptanshumittal\",\n    },\n  ],\n};\n\n// ABOUT SECTION\n// If you want the About Section to show a profile picture you can fill the profilePictureLink either with:\n//a) your Instagram username\n//      i.e:profilePictureLink:\"johnDoe123\",\n//b) a link to an hosted image\n//      i.e:profilePictureLink:\"www.picturesonline.com/johnDoeFancyAvatar.jpg\",\n//c) image in \"editable-stuff\" directory and use require(\"\") to import here,\n//      i.e: profilePictureLink: require(\"../editable-stuff/hashirshoaeb.png\"),\n//d) If you do not want any picture to be displayed, just leave it empty :)\n//      i.e: profilePictureLink: \"\",\n// For Resume either provide link to your resume or import from \"editable-stuff\" directory\n//     i.e resume: require(\"../editable-stuff/resume.pdf\"),\n//         resume: \"https://docs.google.com/document/d/13_PWdhThMr6roxb-UFiJj4YAFOj8e_bv3Vx9UHQdyBQ/edit?usp=sharing\",\n\nconst education = {\n  show: true\n};\n\nconst about = {\n  show: true,\n  heading: \"About Me\",\n  imageLink: require(\"../editable-stuff/profilpic.png\"),\n  imageSize: 375,\n  message:\n    \"My name is Diptanshu Mittal. I am an undergraduate student at Indraprastha Institute of Information Technology(IIIT) Delhi, pursuing B.Tech in Computer Science and Applied Mathematics. I have been programming since my high school days, and the tremendous and ever-increasing utility of software has fueled my desire to learn more. Since my freshman year, I have been working with Django, Flask and JavaScript frameworks like ReactJS. I have done several web development related projects, implementing many of them from scratch as a full-stack developer. I have worked with several databases like MongoDB, PostgreSQL, SQLite, MySQL, and several hosting services like Heroku, Microsoft Azure, MongoDB Atlas and Hostinger. The open-source community has helped me acquire different skills, and I want to give back to the community by contributing to various organisations.\",\n  resume: \"https://drive.google.com/file/d/1xEDtx7hHpW-qpGD4PnmWqhhqI2yyi0p-/view?usp=sharing\",\n};\n\n// PROJECTS SECTION\n// Setting up project lenght will automatically fetch your that number of recently updated projects, or you can set this field 0 to show none.\n//      i.e: reposLength: 0,\n// If you want to display specfic projects, add the repository names,\n//      i.e [\"repository-1\", \"repo-2\"]\nconst repos = {\n  show: true,\n  heading: \"Recent Projects on GitHub\",\n  gitHubUsername: \"diptanshumittal\", //i.e.\"johnDoe12Gh\"\n  reposLength: 4,\n  specificRepos: [],\n};\n\n// Leadership SECTION\nconst leadership = {\n  show: true,\n  heading: \"Leadership\",\n  message:\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Vitae auctor eu augue ut lectus arcu bibendum at varius. Libero justo laoreet sit amet cursus sit amet. Imperdiet dui accumsan sit amet nulla facilisi morbi. At auctor urna nunc id. Iaculis urna id volutpat lacus laoreet non curabitur gravida. Et magnis dis parturient montes nascetur ridiculus mus mauris. In nisl nisi scelerisque eu ultrices vitae auctor. Mattis nunc sed blandit libero volutpat sed cras ornare. Pulvinar neque laoreet suspendisse interdum consectetur libero.\",\n  images: [\n    { \n      img: require(\"../editable-stuff/profilpic.png\"), \n      label: \"First slide label\", \n      paragraph: \"Nulla vitae elit libero, a pharetra augue mollis interdum.\" \n    },\n    { \n      img: require(\"../editable-stuff/profilpic.png\"), \n      label: \"Second slide label\", \n      paragraph: \"Nulla vitae elit libero, a pharetra augue mollis interdum.\" \n    },\n  ],\n  imageSize: {\n    width:\"615\",\n    height:\"450\"\n  }\n};\n\n// SKILLS SECTION\nconst skills = {\n  show: true,\n  heading: \"Skills\",\n  hardSkills: [\n    { name: \"Python\", value: 90 },\n    { name: \"SQL\", value: 75 },\n    { name: \"Data Structures\", value: 85 },\n    { name: \"C/C++\", value: 65 },\n    { name: \"JavaScript\", value: 90 },\n    { name: \"React\", value: 65 },\n    { name: \"HTML/CSS\", value: 55 },\n    { name: \"C#\", value: 80 },\n  ],\n  softSkills: [\n    { name: \"Goal-Oriented\", value: 80 },\n    { name: \"Collaboration\", value: 90 },\n    { name: \"Positivity\", value: 75 },\n    { name: \"Adaptability\", value: 85 },\n    { name: \"Problem Solving\", value: 75 },\n    { name: \"Empathy\", value: 90 },\n    { name: \"Organization\", value: 70 },\n    { name: \"Creativity\", value: 90 },\n  ],\n};\n\n// GET IN TOUCH SECTION\nconst getInTouch = {\n  show: true,\n  heading: \"Get In Touch\",\n  message:\n    \"I'm currently looking for full-time Machine Learning and Software Engineering opportunities! Please feel free to email me - \",\n};\n\nconst experiences = {\n  show: true\n}\n\nconst projects = {\n  show: true\n}\n\n// Blog SECTION\n// const blog = {\n//   show: false,\n// };\n\nexport { navBar, mainBody, about, repos, skills, leadership, getInTouch, experiences, education, projects };\n","import React from \"react\";\nimport Typist from \"react-typist\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nconst MainBody = React.forwardRef(\n  ({ gradient, title, message, icons }, ref) => {\n    return (\n      <Jumbotron\n        fluid\n        id=\"home\"\n        style={{\n          background: `linear-gradient(136deg,${gradient})`,\n          backgroundSize: \"1200% 1200%\",\n        }}\n        className=\"title bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\n      >\n        <div id=\"stars\"></div>\n        <Container className=\"text-center\">\n          <h1 ref={ref} className=\"display-1\">\n            {title}\n          </h1>\n          <Typist className=\"lead typist\" cursor={{ show: false }}>\n            {\" \"}\n            {message}\n          </Typist>\n          <div className=\"p-5\">\n            {icons.map((icon, index) => (\n              <a\n                key={`social-icon-${index}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={icon.url}\n                aria-label={`My ${icon.image.split(\"-\")[1]}`}\n              >\n                <i className={`fab ${icon.image}  fa-3x socialicons`} />\n              </a>\n            ))}\n          </div>\n          <a\n            className=\"btn btn-outline-light btn-lg \"\n            href=\"#aboutme\"\n            role=\"button\"\n            aria-label=\"Learn more about me\"\n          >\n            More about me\n          </a>\n        </Container>\n      </Jumbotron>\n    );\n  }\n);\n\nexport default MainBody;\n","import React from \"react\";\nimport {Container, Row, Jumbotron} from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst pictureLinkRegex = new RegExp(\n  /[(http(s)?):(www.)?a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/\n);\n\nconst AboutMe = ({ heading, message, link, imgSize, resume }) => {\n  const [profilePicUrl, setProfilePicUrl] = React.useState(\"\");\n  const [showPic, setShowPic] = React.useState(Boolean(link));\n\n  React.useEffect(() => {\n    if (link && !pictureLinkRegex.test(link)) {\n      handleRequest();\n    } else {\n      setProfilePicUrl(link);\n    }\n  }, [link]);\n\n  const handleRequest = async () => {\n    const instaLink = \"https://www.instagram.com/\";\n    const instaQuery = \"/?__a=1\";\n    try {\n      const response = await axios.get(instaLink + link + instaQuery);\n      setProfilePicUrl(response.data.graphql.user.profile_pic_url_hd);\n    } catch (error) {\n      setShowPic(false);\n      console.error(error.message);\n    }\n  };\n\n  return (\n    <Jumbotron className=\"bg-light m-0\" id=\"aboutme\">\n            <Container>\n              <Row>\n                <div className=\"col-5 d-none d-lg-block align-self-center\">\n                  {showPic && (\n                    <img\n                      className=\"border border-secondary rounded-circle\"\n                      src={profilePicUrl}\n                      alt=\"profilepicture\"\n                      width={imgSize}\n                      height={imgSize}\n                    />\n                  )}\n                </div>\n\n                <div className={`col-lg-${showPic ? \"7\" : \"12\"}`}>\n                  <h2 className=\"heading\">{heading}</h2>\n                  <p className=\"lead text-center\">My name is Diptanshu Mittal. I am an undergraduate student at Indraprastha Institute of Information Technology(IIIT) Delhi, pursuing B.Tech in Computer Science and Applied Mathematics. <br/>Since my freshman year, I have been working with Django, Flask, ReactJS, AngularJS, and have done several web development related projects, implementing many of them from scratch as a full-stack developer. I have worked with several databases like MongoDB, PostgreSQL, SQLite, MySQL, and several hosting services like Heroku, Microsoft Azure and Hostinger. The open-source community has helped me acquire different skills, and I want to give back to the community as much possible!.</p>\n                  {resume && (\n                    <p className=\"lead text-center\">\n                      <a\n                        className=\"btn btn-outline-dark btn-lg\"\n                        href={resume}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                        role=\"button\"\n                        aria-label=\"Resume/CV\"\n                      >\n                        Resume\n                      </a>\n                    </p>\n                  )}\n                </div>\n              </Row>\n            </Container>\n    </Jumbotron>\n  );\n};\n\nexport default AboutMe;\n\n\n\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\n\nconst Project = () => {\n  return (\n    <Jumbotron fluid id=\"projects\" className=\"bg-light\">\n      <Container >\n        <h2 class=\"heading\">Projects</h2>\n        <Container>\n            <Row>\n\n                <div class=\"project no-image\">\n                    <div class=\"project-info\">\n                        <h3>Classification of Network Traffic and Network Intrusion Detection</h3>\n                        <p>\n                            Made a stacked model for classification which was able to classify intrusion on first level using decision tree classifier and classified the attack category in the second level using XGBoost classifier. The model was trained on UNSW-NB-15 dataset.\n                        </p>\n                        <a href=\"https://drive.google.com/file/d/1w6S7YteRAyuaMQ71Xc1Www0LwrQaMRv4/view?usp=sharing\" target=\"_blank\">View Report</a><br/>\n                        <a href=\"https://github.com/underhood31/Network-Intrusion-Detection-System\" target=\"_blank\">View Repo</a>\n                    </div>\n                </div>\n\n                <div class=\"project no-image\">\n                    <div class=\"project-info\">\n                        <h3>Object detection and localization for AUVSI-SUAS</h3>\n                        <p>\n                            Processing live video feed from the drone and detecting object using edge detection. Classifying the detected object using Yolo-v3 (trained for suctom class) and localizing the targets detected.\n                        </p>\n                        <a href=\"https://github.com/UAS-IIITD/cv-task-2020\" target=\"_blank\">View Repo</a>\n                    </div>\n                </div>\n\n                <div class=\"project no-image\">\n                    <div class=\"project-info\">\n                        <h3>Plants vs Zombies</h3>\n                        <p>\n                            Made a replica of Plants vs Zombies game using JavaFX and impleme serialization/deserialization, thread synchronization, OOPs in the game.\n                        </p>\n                        <a href=\"https://github.com/diptanshumittal/PlantsVsZombies\" target=\"_blank\">View Repo</a>\n                    </div>\n                </div>\n\n                <div class=\"project no-image\">\n                    <div class=\"project-info\">\n                        <h3>Election Portal</h3>\n                        <p>\n                            A platform designed for analysing the voting pattern and voter demographics. The platform also had the feature of voting to predict the probable outcome.\n                            The database was stored on the Azure SQL database, and the backend was developed using the Django framework.\n                            Concurrency control, two-phase locking, logging transaction and multithreading were implemented in the backend.\n                        </p>\n                        <a href=\"https://github.com/diptanshumittal/Election_Portal\" target=\"_blank\">View Repo</a>\n                    </div>\n                </div>\n\n            </Row>\n        </Container>\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\n\nconst Footer = (props) => {\n  const bgStyle = { backgroundColor: \"#f5f5f5\" };\n\n  return (\n    <footer style={bgStyle} className=\"mt-auto py-5 text-center \">\n      <Container id=\"contact\">\n        <h2 className=\"heading\">Get in Touch</h2>\n        <div id=\"contact-form\">\n            <form method=\"POST\" action=\"https://formspree.io/f/xjvjvvkq\">\n                <input type=\"hidden\" name=\"_subject\" value=\"Contact request from personal website\" />\n                <input type=\"email\" name=\"_replyto\" placeholder=\"Your email\" required />\n                <textarea name=\"message\" placeholder=\"Your message\" required></textarea>\n                <button type=\"submit\" className=\"btn btn-outline-dark btn-lg\">Send</button>\n            </form>\n        </div>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { useLayoutEffect, useEffect } from \"react\"\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useRef } from \"react\";\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\n\nconst isBrowser = typeof window !== `undefined`;\n\nfunction getScrollPosition({ element, useWindow }) {\n  if (!isBrowser) return { x: 0, y: 0 };\n\n  const target = element ? element.current : document.body;\n  const position = target.getBoundingClientRect();\n\n  return useWindow\n    ? { x: window.scrollX, y: window.scrollY }\n    : { x: position.left, y: position.top };\n}\n\nexport function useScrollPosition(effect, deps, element, useWindow, wait) {\n  const position = useRef(getScrollPosition({ useWindow }));\n\n  let throttleTimeout = null;\n\n  const callBack = () => {\n    const currPos = getScrollPosition({ element, useWindow });\n    effect({ prevPos: position.current, currPos });\n    position.current = currPos;\n    throttleTimeout = null;\n  };\n\n  useIsomorphicLayoutEffect(() => {\n    if (!isBrowser) {\n      return;\n    }\n\n    const handleScroll = () => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callBack, wait);\n        }\n      } else {\n        callBack();\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n      throttleTimeout && clearTimeout(throttleTimeout);\n    };\n  }, deps);\n}\n\nuseScrollPosition.defaultProps = {\n  deps: [],\n  element: false,\n  useWindow: false,\n  wait: null,\n};\n","import React from \"react\";\n\nconst useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = React.useState(null);\n  React.useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries) => {\n      entries.forEach((entry) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useScrollPosition } from \"../hooks/useScrollPosition\";\nimport useResizeObserver from \"../hooks/useResizeObserver\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { mainBody, repos, about, skills, education, experiences, projects } from \"../editable-stuff/config.js\";\n\nconst Navigation = React.forwardRef((props, ref) => {\n  // const { showBlog, FirstName } = config;\n  const [isTop, setIsTop] = useState(true);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const navbarMenuRef = React.useRef();\n  const navbarDimensions = useResizeObserver(navbarMenuRef);\n  const navBottom = navbarDimensions ? navbarDimensions.bottom : 0;\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      if (!navbarDimensions) return;\n      currPos.y + ref.current.offsetTop - navbarDimensions.bottom > 5\n        ? setIsTop(true)\n        : setIsTop(false);\n      setScrollPosition(currPos.y);\n    },\n    [navBottom]\n  );\n\n  React.useEffect(() => {\n    if (!navbarDimensions) return;\n    navBottom - scrollPosition >= ref.current.offsetTop\n      ? setIsTop(false)\n      : setIsTop(true);\n  }, [navBottom, navbarDimensions, ref, scrollPosition]);\n\n  return (\n    <Navbar\n      ref={navbarMenuRef}\n      className={` fixed-top  ${\n        !isTop ? \"navbar-white\" : \"navbar-transparent\"\n      }`}\n      expand=\"lg\"\n    >\n      <Navbar.Brand className=\"brand\" href={process.env.PUBLIC_URL + \"/#home\"}>\n        {`<${mainBody.firstName} />`}\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"toggler\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          {/* {\n            <Nav.Link className=\"nav-link lead\">\n              <Link to={process.env.PUBLIC_URL + \"/blog\"}>Blog</Link>\n            </Nav.Link>\n          } */}\n          {about.show && (\n            <Nav.Link\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#aboutme\"}\n            >\n              About\n            </Nav.Link>\n          )}\n          {experiences.show && (\n            <Nav.Link\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#experience\"}\n            >\n              Experience\n            </Nav.Link>\n          )}\n          {projects.show && (\n            <Nav.Link\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#projects\"}\n            >\n              Projects\n            </Nav.Link>\n          )}\n          {education.show && (\n            <Nav.Link\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#education\"}\n            >\n              Education\n            </Nav.Link>\n          )}\n          {repos.show && (\n            <Nav.Link\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#repos\"}\n            >\n              Repos\n            </Nav.Link>\n          )}\n          <Nav.Link\n            className=\"nav-link lead\"\n            href={about.resume}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            Resume\n          </Nav.Link>\n          \n          {skills.show && (\n            <Nav.Link\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#skills\"}\n            >\n              Skills\n            </Nav.Link>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n});\n\nexport default Navigation;\n","import React from \"react\";\nimport { Jumbotron, Container } from \"react-bootstrap\";\nimport { useScrollPosition } from \"../../hooks/useScrollPosition\";\n\nfunction Skills({ heading, hardSkills, softSkills }) {\n  const skillsTabRef = React.useRef();\n  const [isScrolled, setIsScrolled] = React.useState(false);\n  //const navbarDimensions = useResizeObserver(navbarMenuRef);\n\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      if (!isScrolled && currPos.y - 400 < 0) setIsScrolled(true);\n    },\n    [],\n    skillsTabRef\n  );\n  return (    \n    <Jumbotron ref={skillsTabRef} fluid className=\"bg-white m-0\" id=\"skills\">\n      <Container className=\"p-5 \">\n        <h2 className=\"heading\">{heading}</h2>\n        <ul>\n            <li>Java</li>\n            <li>Python</li>\n            <li>C/C++</li>\n            <li>JavaScript</li>\n            <li>Dart</li>\n            <li>Node.js</li>\n            <li>Julia</li>\n            <li>React</li>\n            <li>R</li>\n            <li>HTML</li>\n            <li>CSS</li>\n        </ul>\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport default Skills;\n","import React from \"react\";\n\nconst GetInTouch = ({ heading, message, email }) => {\n  return (\n    <>\n      <h2 className=\"display-4 pb-3 text-center\">{heading}</h2>\n      <p className=\"lead text-center pb-3\">\n        {message}, <a href={`mailto:${email}`}>{email}</a>.\n      </p>\n    </>\n  );\n};\n\nexport default GetInTouch;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Skeleton from \"react-loading-skeleton\";\nimport axios from \"axios\";\n\nconst ProjectCard = ({ value }) => {\n  const {\n    name,\n    description,\n    svn_url,\n    stargazers_count,\n    languages_url,\n    pushed_at,\n  } = value;\n  return (\n    <Col md={6}>\n      <Card className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\n        <Card.Body>\n          <Card.Title as=\"h5\">{name || <Skeleton />} </Card.Title>\n          <Card.Text>{(!description)?\"\":description || <Skeleton count={3} />} </Card.Text>\n          {svn_url ? <CardButtons svn_url={svn_url} /> : <Skeleton count={2} />}\n          <hr />\n          {languages_url ? (\n            <Language languages_url={languages_url} repo_url={svn_url} />\n          ) : (\n            <Skeleton count={3} />\n          )}\n          {value ? (\n            <CardFooter star_count={stargazers_count} repo_url={svn_url} pushed_at={pushed_at} />\n          ) : (\n            <Skeleton />\n          )}\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nconst CardButtons = ({ svn_url }) => {\n  return (\n    <>\n      <a\n        href={`${svn_url}/archive/master.zip`}\n        className=\"btn btn-outline-secondary mr-3\"\n      >\n        <i className=\"fab fa-github\" /> Clone Project\n      </a>\n      <a href={svn_url} target=\" _blank\" className=\"btn btn-outline-secondary\">\n        <i className=\"fab fa-github\" /> Repo\n      </a>\n    </>\n  );\n};\n\nconst Language = ({ languages_url, repo_url }) => {\n  const [data, setData] = useState([]);\n\n  const handleRequest = useCallback(async () => {\n    try {\n      const response = await axios.get(languages_url);\n      return setData(response.data);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }, [languages_url]);\n\n  useEffect(() => {\n    handleRequest();\n  }, [handleRequest]);\n\n  const array = [];\n  let total_count = 0;\n  for (let index in data) {\n    array.push(index);\n    total_count += data[index];\n  }\n\n  return (\n    <div className=\"pb-3\">\n      Languages:{\" \"}\n      {array.length\n        ? array.map((language) => (\n            <a\n              key={language} \n              className=\"badge badge-light card-link\"\n              href={repo_url + `/search?l=${language}`}\n              target=\" _blank\"\n            >\n              {language}:{\" \"}\n              {Math.trunc((data[language] / total_count) * 1000) / 10} %\n            </a>\n          ))\n        : \"code yet to be deployed.\"}\n    </div>\n  );\n};\n\nconst CardFooter = ({ star_count, repo_url, pushed_at }) => {\n  const [updated_at, setUpdated_at] = useState(\"0 mints\");\n\n  const handleUpdatetime = useCallback(() => {\n    const date = new Date(pushed_at);\n    const nowdate = new Date();\n    const diff = nowdate.getTime() - date.getTime();\n    const hours = Math.trunc(diff / 1000 / 60 / 60);\n\n    if (hours < 24) {\n      if (hours < 1) return setUpdated_at(\"just now\");\n      let measurement = hours === 1 ? \"hour\" : \"hours\";\n      return setUpdated_at(`${hours.toString()} ${measurement} ago`);\n    } else {\n      const options = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n      const time = new Intl.DateTimeFormat(\"en-US\", options).format(date);\n      return setUpdated_at(`on ${time}`);\n    }\n  }, [pushed_at]);\n\n  useEffect(() => {\n    handleUpdatetime();\n  }, [handleUpdatetime]);\n\n  return (\n    <p className=\"card-text\">\n      <a\n        href={repo_url + \"/stargazers\"}\n        target=\" _blank\"\n        className=\"text-dark text-decoration-none\"\n      >\n        <span className=\"text-dark card-link mr-4\">\n          <i className=\"fab fa-github\" /> Stars{\" \"}\n          <span className=\"badge badge-dark\">{star_count}</span>\n        </span>\n      </a>\n      <small className=\"text-muted\">Updated {updated_at}</small>\n    </p>\n  );\n};\n\nexport default ProjectCard;\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport axios from \"axios\";\r\n\r\nconst dummyProject = {\r\n  name: null,\r\n  description: null,\r\n  svn_url: null,\r\n  stargazers_count: null,\r\n  languages_url: null,\r\n  pushed_at: null,\r\n};\r\nconst API = \"https://api.github.com\";\r\n// const gitHubQuery = \"/repos?sort=updated&direction=desc\";\r\n// const specficQuerry = \"https://api.github.com/repos/diptanshumittal/\";\r\n\r\nconst GitHubProject = ({ heading, username, length, specfic }) => {\r\n  const allReposAPI = `${API}/users/${username}/repos?sort=updated&direction=desc`;\r\n  const specficReposAPI = `${API}/repos/${username}`;\r\n  const dummyProjectsArr = new Array(length + specfic.length).fill(\r\n    dummyProject\r\n  );\r\n\r\n  const [projectsArray, setProjectsArray] = useState([]);\r\n\r\n  const fetchRepos = useCallback(async () => {\r\n    let repoList = [];\r\n    try {\r\n      // getting all repos\r\n      const response = await axios.get(allReposAPI);\r\n      // slicing to the length\r\n      repoList = [...response.data.slice(0, length)];\r\n      // adding specified repos\r\n      try {\r\n        for (let repoName of specfic) {\r\n          const response = await axios.get(`${specficReposAPI}/${repoName}`);\r\n          repoList.push(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n      // setting projectArray\r\n      // TODO: remove the duplication.\r\n      setProjectsArray(repoList);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }, [allReposAPI, length, specfic, specficReposAPI]);\r\n\r\n  useEffect(() => {\r\n    fetchRepos();\r\n  }, [fetchRepos]);\r\n\r\n  return (\r\n    <Jumbotron fluid id=\"repos\" className=\"bg-light m-0\">\r\n      <Container >\r\n        <h2 className=\"display-4 pb-5 text-center\">{heading}</h2>\r\n        <Row>\r\n          {projectsArray.length\r\n            ? projectsArray.map((project, index) => (\r\n                <ProjectCard\r\n                  key={`project-card-${index}`}\r\n                  id={`project-card-${index}`}\r\n                  value={project}\r\n                />\r\n              ))\r\n            : dummyProjectsArr.map((project, index) => (\r\n                <ProjectCard\r\n                  key={`dummy-${index}`}\r\n                  id={`dummy-${index}`}\r\n                  value={project}\r\n                />\r\n              ))}\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n};\r\n\r\nexport default GitHubProject;\r\n","import React from 'react';\nimport {\n    Container,\n    Row,\n    Jumbotron\n} from \"react-bootstrap\";\n\nconst Experience = () => {\n    return (  \n        <section id=\"experience\">\n            <Container>\n                <Jumbotron fluid className=\"bg-white\" >\n                        <h2 class=\"heading\">Experience</h2>\n                        <div id=\"experience-timeline\">\n                            <div class=\"vtimeline-point\"><div class=\"vtimeline-icon\"><i class=\"fa fa-map-marker\"></i></div><div class=\"vtimeline-block\"><span class=\"vtimeline-date\">May 2019 – June 2019</span><div data-date=\"May 2019 – June 2019\" class=\"vtimeline-content\">\n                                <h3>Svarochi</h3>\n                                <h4>Android App Developer Intern</h4>\n                                <p>\n                                    Designed an app for automatic testing of the lamps (Bluetooth enabled) being produced. Firebase maintained the database of the test and its result done by the user. The app connected to the light bulbs within 2 sec(average case).\n                                </p>\n                            </div></div></div>\n                            \n                            <div class=\"vtimeline-point\"><div class=\"vtimeline-icon\"><i class=\"fa fa-map-marker\"></i></div><div class=\"vtimeline-block\"><span class=\"vtimeline-date\">May 2019 – June 2019</span><div data-date=\"May 2019 – June 2019\" class=\"vtimeline-content\">\n                                <h3>PaceDat</h3>\n                                <h4>App Developer Intern</h4>\n                                <p>\n                                Designed a flutter app and database for the startup. The app served as the platform for the users to learn the chapters via notes and videos and raise queries. App also had the feature of live contest.\n                                </p>\n                            </div></div></div>\n\n                            <div class=\"vtimeline-point\"><div class=\"vtimeline-icon\"><i class=\"fa fa-map-marker\"></i></div><div class=\"vtimeline-block\"><span class=\"vtimeline-date\">May 2019 – June 2019</span><div data-date=\"May 2019 – June 2019\" class=\"vtimeline-content\">\n                                <h3>Mathskikaksha</h3>\n                                <h4>Web Developer Intern</h4>\n                                <p>\n                                Built a website using bootstrap and responsible for maintenance and updates of the website.\n                                </p>\n                            </div></div></div>\n\n                            <div class=\"vtimeline-point\"><div class=\"vtimeline-icon\"><i class=\"fa fa-map-marker\"></i></div><div class=\"vtimeline-block\"><span class=\"vtimeline-date\">May 2019 – June 2019</span><div data-date=\"May 2019 – June 2019\" class=\"vtimeline-content\">\n                                <h3>Bhartiya Mahila Seva Sangh</h3>\n                                <h4>Community Work</h4>\n                                <p>\n                                Worked with the NGO (Bhartiya Mahila Seva Sangh) and volunteered in distribution chain of materials and collecting the handcrafted material. Volunteered in the DDU-GKY project of central government to help the unemployed youth in rural areas by providing them skills.\n                                </p>\n                            </div></div></div>\n                            \n                        </div>\n                </Jumbotron>\n            </Container>\n        </section>\n    );\n}\n \nexport default Experience;","import React from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Jumbotron\r\n} from \"react-bootstrap\";\r\n\r\nconst Education = () => {\r\n    return (  \r\n        <Jumbotron className=\"bg-white m-0\" id=\"education\">\r\n            <Container>\r\n                <h2 class=\"heading\">Education</h2>\r\n                    <div class=\"education-block\">\r\n                        <h3>Indraprastha Institute of Information Technology, New Delhi</h3>\r\n                        <span> CGPA : 8.75 </span>\r\n                        <p><h4> B.Tech (CSAM) <span> (till 5th sem) </span><br/> 2018-2022 </h4></p>\r\n                    </div>\r\n                    <div class=\"education-block\">\r\n                        <h3>Air Force Golden Jubliee Institute, New Delhi</h3>\r\n                        <span> Percentage : 91.6% </span>\r\n                        <p><h4>Class 12th (CSBE)<br/> 2016-2017 </h4></p>\r\n                    </div>\r\n                    <div class=\"education-block\">\r\n                        <h3>Air Force Golden Jubliee Institute, New Delhi</h3>\r\n                        <span> Percentage : 96% </span>\r\n                        <p><h4>Class 10th (CSBE)<br/> 2014-2015 </h4></p>\r\n                    </div>      \r\n            </Container>\r\n        </Jumbotron>\r\n            \r\n    );\r\n}\r\n \r\nexport default Education;\r\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport {\n  navBar,\n  mainBody,\n  about,\n  repos,\n  skills,\n  getInTouch,\n  education,\n  experiences,\n  projects\n} from \"./editable-stuff/config.js\";\nimport MainBody from \"./components/home/MainBody\";\nimport AboutMe from \"./components/home/AboutMe\";\nimport Project from \"./components/home/Project\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar\";\nimport Skills from \"./components/home/Skills\";\nimport GetInTouch from \"./components/home/GetInTouch.jsx\";\nimport GitHubProject from \"./components/home/GitHubProject\";\nimport Experience from \"./components/home/Experience\";\nimport Education from \"./components/home/Education.jsx\";\n\nconst Home = React.forwardRef((props, ref) => {\n  return (\n    <>\n      <MainBody\n        gradient={mainBody.gradientColors}\n        title={`${mainBody.firstName} ${mainBody.middleName} ${mainBody.lastName}`}\n        message={mainBody.message}\n        icons={mainBody.icons}\n        ref={ref}\n      />\n      {about.show && (\n        <AboutMe\n          heading={about.heading}\n          message={about.message}\n          link={about.imageLink}\n          imgSize={about.imageSize}\n          resume={about.resume}\n        />\n      )}\n      {experiences.show && (\n        <Experience/>\n      )}\n      {projects.show && (\n        <Project/>\n      )}\n      {education.show && (\n        <Education />\n      )}\n      {repos.show && (\n        <GitHubProject\n          heading={repos.heading}\n          username={repos.gitHubUsername}\n          length={repos.reposLength}\n          specfic={repos.specificRepos}\n        />\n      )}\n      {skills.show && (\n        <Skills\n          heading={skills.heading}\n          hardSkills={skills.hardSkills}\n          softSkills={skills.softSkills}\n        />\n      )}\n      \n    </>\n  );\n});\n\nconst App = () => {\n  const titleRef = React.useRef();\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n      {navBar.show && <Navbar ref={titleRef} />}\n      <Route path=\"/\" exact component={() => <Home ref={titleRef} />} />\n      {/* {false && <Route path=\"/blog\" exact component={Blog} />}\n      {false && <Route path=\"/blog/:id\" component={BlogPost} />} */}\n      <Footer>\n        {getInTouch.show && (\n          <GetInTouch\n            heading={getInTouch.heading}\n            message={getInTouch.message}\n            email={getInTouch.email}\n          />\n        )}\n      </Footer>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/custom.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}